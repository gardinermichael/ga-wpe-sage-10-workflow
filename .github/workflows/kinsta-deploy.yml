# Manually triggered workflow except when pushed to Staging

# Variables:
  # KINSTA_SITE_NAME
  # KINSTA_SITE_IP
  # KINSTA_SITE_FOLDER
  # KINSTA_PRODUCTION_PORT
  # KINSTA_STAGING_PORT
  # KINSTA_SSH_KEY_PRIVATE
  # KINSTA_STAGING_SSH_KNOWN_HOSTS
  # KINSTA_PRODUCTION_SSH_KNOWN_HOSTS


# Server Set Up (https://anchor.host/automatic-git-deploy-with-kinsta-via-ssh/)
  # git init --bare ~/private/{KINSTA_SITE_NAME}.git
  # cd ~/public; git init 
  # cd ~/private/{KINSTA_SITE_FOLDER}.git/hooks/; vi post-receive
    # #!/bin/bash
    # TARGET="/www/{KINSTA_SITE_FOLDER}/public"
    # GIT_DIR="/www/{KINSTA_SITE_FOLDER}/private/{KINSTA_SITE_NAME}.git"
    # BRANCH="master"

    # while read oldrev newrev ref
    # do
    #         # only checking out the master (or whatever branch you would like to deploy)
    #         if [[ $ref = refs/heads/$BRANCH ]];
    #         then
    #                 echo "Ref $ref received. Deploying ${BRANCH} branch to production..."
    #                 git --work-tree=$TARGET --git-dir=$GIT_DIR checkout -f
    #         else
    #                 echo "Ref $ref received. Doing nothing: only the ${BRANCH} branch may be deployed on this server."
    #         fi
    # done
  # chmod +x ~/private/{KINSTA_SITE_NAME}.git/hooks/post-receive


name: Kinsta Deploy

on:
  push:
    branches:
      - staging
      - '!master'
      - '!main'

  workflow_dispatch:

jobs:
  Build-and-Deploy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: '7.4'

      - name: Cache - Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache - Load Yarn Cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache - Get Composer Cache Directory Path
        id: get-composer-cache-dir
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache - Load Composer Cache
        uses: actions/cache@v2
        id: composer-cache # use this to check for `cache-hit` (`steps.composer-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.get-composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Build - Install Yarn Dependecies
        run: |
          yarn --prefer-offline
          yarn build:production
      - name: Build - Install Composer Dependencies
        run: composer install --no-ansi --no-dev --no-interaction --optimize-autoloader --no-progress

      - name: Build - Move files Into Project Folder
        run: |
          mkdir -p wp-content/${PROJECT_TYPE}s/${PROJECT_NAME}
          ls | grep -v wp-content | xargs mv -t wp-content/${PROJECT_TYPE}s/${PROJECT_NAME}
        env:
          PROJECT_TYPE: ${{secrets.PROJECT_TYPE}}
          PROJECT_NAME: ${{secrets.PROJECT_NAME}}

      - name: Deploy - Create SSH key - Staging?
        if: contains(github.ref, 'staging')
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.KINSTA_SSH_KEY_PRIVATE }}
          SSH_KNOWN_HOSTS: ${{ secrets.KINSTA_STAGING_SSH_KNOWN_HOSTS }}

      - name: Deploy - Create SSH key - Production?
        if: contains(github.ref, 'master') || contains(github.ref, 'main')
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.KINSTA_SSH_KEY_PRIVATE }}
          SSH_KNOWN_HOSTS: ${{ secrets.KINSTA_PRODUCTION_SSH_KNOWN_HOSTS }}
          

      - name: Deploy - Git Config - Staging?
        if: contains(github.ref, 'staging')
        run: git remote add kinsta ssh://${KINSTA_SITE_NAME}@${KINSTA_SITE_IP}:${KINSTA_STAGING_PORT}/www/${KINSTA_SITE_FOLDER}/private/bafflerdev.git
        env:
          KINSTA_SITE_NAME: ${{ secrets.KINSTA_SITE_NAME }}
          KINSTA_SITE_IP: ${{ secrets.KINSTA_SITE_IP }}
          KINSTA_SITE_FOLDER: ${{ secrets.KINSTA_SITE_FOLDER }}
          KINSTA_STAGING_PORT: ${{ secrets.KINSTA_STAGING_PORT }}

      - name: Deploy - Git Config - Production?
        if: contains(github.ref, 'master') || contains(github.ref, 'main')
        run: git remote add kinsta ssh://${KINSTA_SITE_NAME}@${KINSTA_SITE_IP}:${KINSTA_PRODUCTION_PORT}/www/${KINSTA_SITE_FOLDER}/private/bafflerdev.git
        env:
          KINSTA_SITE_NAME: ${{ secrets.KINSTA_SITE_NAME }}
          KINSTA_SITE_IP: ${{ secrets.KINSTA_SITE_IP }}
          KINSTA_SITE_FOLDER: ${{ secrets.KINSTA_SITE_FOLDER }}
          KINSTA_PRODUCTION_PORT: ${{ secrets.KINSTA_PRODUCTION_PORT }}
          

      - name: Deploy - Git Config
        run: |
           git config --global user.email "actions@github.com"
           git config --global user.name "Github Action Deployment"
           git fetch kinsta
      - name: Deploy - Git Ignore
        run: |
           rm .gitignore; mv .gitignores/__production .gitignore
      - name: Deploy - Git Push
        run: |
          git checkout -b ${GITHUB_REF##*/}-${{ github.run_id }}-${{ github.run_number }}
          git rm -r -q --cached --ignore-unmatch --force .github .gitignores composer.* gulpfile.babel.js package.json webpack.config.js yarn.lock .babelrc .editorconfig .eslintignore .eslintrc.json .stylelintrc tests
          git add .
          git status
          ls -la
          git commit -m "Deployment commit ${GITHUB_REF##*/}-${{ github.run_id }}-${{ github.run_number }}"
          git push -f kinsta ${GITHUB_REF##*/}-${{ github.run_id }}-${{ github.run_number }}:master
